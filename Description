Designed a Python Graphical User Interface (GUI) with Tkinter 
Program that collects data from the open circuit and short circuit test of a Transformer and prints the values of the equivalent circuit parameters.
Code:

from tkinter import *
import math


def getanswer():
    OC_Test_Results, SC_Test_Results = getvalues()

    cos_theta0 = OC_Test_Results[2]/(OC_Test_Results[0]*OC_Test_Results[1])
    theta0 = math.acos(cos_theta0)
    sin_theta0 = math.sin(theta0)

    i_magnetizing_LV = OC_Test_Results[1]*sin_theta0
    i_coreloss_LV = OC_Test_Results[1]*cos_theta0

    r_coreloss_LV = OC_Test_Results[0]/i_coreloss_LV
    r_coreloss_LV = round(r_coreloss_LV,2)
    x_magnetizing_LV = OC_Test_Results[0]/i_magnetizing_LV
    x_magnetizing_LV = round(x_magnetizing_LV,2)

    r_equivalent_HV = SC_Test_Results[2]/SC_Test_Results[1]**2
    r_equivalent_HV = round(r_equivalent_HV,2)
    z_shortcircuit_HV = SC_Test_Results[0]/SC_Test_Results[1]
    x_eq_HV_square = z_shortcircuit_HV**2 - r_equivalent_HV**2
    try:
        x_equivalent_HV = math.sqrt(x_eq_HV_square)
    except ValueError:
        print("Value Error!")
    else:
        x_equivalent_HV = round(x_equivalent_HV,2)
        print(f'Resistance representing core loss reffered to LV is {r_coreloss_LV}立.')
        print(f'Magnetizing reactance reffered to LV is {x_magnetizing_LV}立.')
        print(f'Equivalent resistance reffered to HV is {r_equivalent_HV}立.')
        print(f'Equivalent reactance reffered to HV is {x_equivalent_HV}立.')
def getvalues():
    vsc = float(voltage_value_SC.get())
    voc = float(voltage_value_OC.get())
    isc = float(current_value_SC.get())
    ioc = float(current_value_OC.get())
    psc = float(power_value_SC.get())
    poc = float(power_value_OC.get())
    sc_data = [vsc,isc,psc]
    oc_data = [voc,ioc,poc]
    return oc_data, sc_data

root = Tk()

root.geometry('900x600')
root.title('FINDIND TRANSFORMER PARAMETERS')
OC_test = Label(root, text='Open Circuit Test', borderwidth=5, relief=SUNKEN, font='thebookmanold 12 bold', padx=30, pady=30)
SC_test = Label(root, text='Short Circuit Test', borderwidth=5, relief=SUNKEN, font='thebookmanold 12 bold', padx=30, pady=30)
voltage = Label(root, text="Voltage (V)", font='thebookmanold 12 bold', padx=30, pady=10, borderwidth=5, relief=SUNKEN)
current = Label(root, text="Current (A)", font='thebookmanold 12 bold', padx=30, pady=10, borderwidth=5, relief=SUNKEN)
power = Label(root, text="Power (W)", font='thebookmanold 12 bold', padx=30, pady=10, borderwidth=5, relief=SUNKEN)
OC_test.grid(row=1)
SC_test.grid(row=2)
voltage.grid(row=0,column=1)
current.grid(row=0,column=2)
power.grid(row=0,column=3)

voltage_value_OC = StringVar()
voltage_value_SC = StringVar()
current_value_OC = StringVar()
current_value_SC = StringVar()
power_value_OC = StringVar()
power_value_SC = StringVar()
voltage_OC = Entry(root, textvariable=voltage_value_OC, relief=SUNKEN, borderwidth=5)
voltage_SC = Entry(root, textvariable=voltage_value_SC, relief=SUNKEN, borderwidth=5)
current_OC = Entry(root, textvariable=current_value_OC, relief=SUNKEN, borderwidth=5)
current_SC = Entry(root, textvariable=current_value_SC, relief=SUNKEN, borderwidth=5)
power_OC = Entry(root, textvariable=power_value_OC, relief=SUNKEN, borderwidth=5)
power_SC = Entry(root, textvariable=power_value_SC, relief=SUNKEN, borderwidth=5)

voltage_OC.grid(row=1, column=1)
voltage_SC.grid(row=2, column=1)
current_OC.grid(row=1, column=2)
current_SC.grid(row=2, column=2)
power_OC.grid(row=1, column=3)
power_SC.grid(row=2, column=3)

submit = Button(root, text="SUBMIT", font=('thebookmanold 14 bold'), borderwidth=5, command=getanswer)
submit.grid(row=3, column=2)


root.mainloop()
